name: Test

on:
  pull_request:
    branches:
      - main
  workflow_call:
    secrets:
      MAP_API_KEY:
        description: 'A map key from the caller workflow'
        required: true
      BASE_URL:
        description: 'A base url api endpoint'
        required: true

jobs:
  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g -XX:+UseParallelGC
    steps:
      - uses: actions/checkout@v3

      - uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Add Key from Secrets
        run: echo -e "mapApiKey=${{secrets.MAP_API_KEY}}\nBASE_URL=${{secrets.BASE_URL}}" > ./local.properties

      - name: Setup Gradle 🐘 And run unit tests 🏗
        uses: gradle/gradle-build-action@v2
        with:
          arguments: testDebugUnitTest
          gradle-version: 7.5.1

      - name: Upload Unit Test report 📤
        if: ${{ success() }}
        uses: actions/upload-artifact@v3
        with:
          name: unit-tests-report
          path: ${{github.workspace}}/app/build/reports/tests
          if-no-files-found: error

  android-tests:
    name: Instrumented tests
    runs-on: macos-latest # enables hardware acceleration in the virtual machine
    timeout-minutes: 55
    strategy:
      matrix:
        api-level: [ 23, 30 ] # 23 is the minimum supported API level

    steps:
      - uses: actions/checkout@v3

      - uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Add Key from Secrets
        run: echo -e "mapApiKey=${{secrets.MAP_API_KEY}}\nBASE_URL=${{secrets.BASE_URL}}" > ./local.properties

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/avd/*/snapshots/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Generate AVD snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: google_apis
          arch: x86_64
          disk-size: 2000M
          heap-size: 600M
          force-avd-creation: true
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          disable-animations: true
          script: echo "Generated AVD snapshot for caching."

      - name: Run Android instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: google_apis
          arch: x86_64
          disk-size: 2000M
          heap-size: 600M
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck --stacktrace

      - name: Upload android test report
        uses: actions/upload-artifact@v3
        with:
          name: android-tests-report-${{ matrix.api-level }}
          path: ${{ env.SAMPLE_PATH }}/app/build/reports/androidTests