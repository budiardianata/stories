plugins {
    alias libs.plugins.android.application
    alias libs.plugins.kotlin.android
    alias libs.plugins.kotlin.parcelize
    alias libs.plugins.kotlin.serialization
    alias libs.plugins.dager.hilt
    alias libs.plugins.kotlin.kapt
    alias libs.plugins.maps.secret
    alias libs.plugins.spotless
    alias libs.plugins.ktlint
}

android {
    namespace 'com.exam.storyapp'
    compileSdk 33
    buildToolsVersion '33.0.0'
    defaultConfig {
        applicationId "com.exam.storyapp"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
        testInstrumentationRunner "com.exam.storyapp.HiltTestRunner"
    }
    signingConfigs {
        // Use debug.keystore, to allow debug builds from CI
        debug {
            storeFile rootProject.file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            if (rootProject.file("debug.keystore").exists()) {
                signingConfig signingConfigs.debug
            }
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled = true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    buildFeatures {
        viewBinding true
    }
    testOptions {
        animationsDisabled = true
        unitTests {
            returnDefaultValues true
        }
    }
}

hilt {
    enableAggregatingTask = true
}

dependencies {
    coreLibraryDesugaring libs.desugar
    implementation libs.core.ktx
    implementation libs.activity
    implementation libs.fragment
    implementation libs.bundles.ui
    implementation libs.bundles.lifecycle
    implementation libs.bundles.navigation
    implementation libs.bundles.camera
    implementation libs.bundles.retrofit
    implementation libs.bundles.okhttp3
    implementation libs.bundles.map.location
    implementation libs.bundles.room
    implementation libs.viewbinding
    implementation libs.permission
    implementation libs.datastore
    implementation libs.glide
    implementation libs.paging3
    implementation libs.kotlinx.serialization
    implementation libs.hilt.android
    implementation libs.expresso.idling.resource
    kapt libs.hilt.compiler
    kapt libs.room.compiler

    testImplementation libs.junit
    testImplementation libs.kotlinx.coroutines.test
    testImplementation libs.core.testing
    testImplementation libs.mockk
    testImplementation libs.turbine

    androidTestImplementation libs.junit.ext
    androidTestImplementation libs.core.testing
    androidTestImplementation libs.navigation.testing
    androidTestImplementation libs.bundles.expresso
    androidTestImplementation libs.bundles.okhttp3.test
    androidTestImplementation libs.hilt.android.test
    kaptAndroidTest libs.hilt.compiler.test
    debugImplementation libs.fragment.test
}

spotless {
    kotlin {
        target '**/*.kt'
        targetExclude("$buildDir/**/*.kt")
        indentWithSpaces()
        licenseHeaderFile(rootProject.file('gradle/license-header.txt'))

        // Spotless doesn't read .editorconfig yet: https://github.com/diffplug/spotless/issues/142
        ktlint('0.46.1').editorConfigOverride([
                'disabled_rules': 'no-wildcard-imports, filename',
                'insert_final_newline': 'true',
                'end_of_line': 'lf',
                'charset': 'utf-8',
                'ij_kotlin_allow_trailing_comma': 'true',
                'ij_kotlin_allow_trailing_comma_on_call_site': 'true',
                'ij_kotlin_imports_layout': '*',
        ])
    }

    format 'misc', {
        target '**/*.gradle', '**/*.md', '**/.gitignore'
        indentWithSpaces()
        trimTrailingWhitespace()
        endWithNewline()
    }

    format 'xml', {
        target '**/*.xml'
        indentWithSpaces()
        trimTrailingWhitespace()
        endWithNewline()
    }
}

ktlint {
    debug = true
}
